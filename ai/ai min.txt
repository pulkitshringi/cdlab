ai min

def minimax(depth, nodeIndex, maximizingPlayer, values, alpha, beta): 
	if depth == 3: return values[nodeIndex] 
	if maximizingPlayer: 
		best = float('-inf')
		for i in range(2): 
			best = max(best, minimax(depth + 1, nodeIndex * 2 + i, False, values, alpha, beta))
			alpha = max(alpha, best) 
			if beta <= alpha: break
		return best 
	else: 
		best = float('inf')
		for i in range(2): 
			best = min(best, minimax(depth + 1, nodeIndex * 2 + i, True, values, alpha, beta))
			beta = min(beta, best) 
			if beta <= alpha: break
		return best 

if __name__ == "__main__": 
    values = [int(input(f"Enter Value {i}  : ")) for i in range(8)]
    print ("The optimal value is :", minimax(0, 0, True, values, float('-inf'), float('inf')))
