AI bfs dfs

graph = {
    'A': ['B','C'],
    'B': ['D','E'],
    'C': ['F'],
    'D': [],
    'E': ['F'],
    'F': []
}

visited_bfs = []
queue = []

def bfs (visited_bfs, graph, node):
    visited_bfs.append(node)
    queue.append(node)
    
    while queue:
        s = queue.pop(0)
        print(s, end = ' ')
        
        for neighbor in graph[s]:
            if neighbor not in visited_bfs:
                visited_bfs.append(neighbor)
                queue.append(neighbor)
                
visited = set()

def dfs (visited, graph, node):
    if node not in visited:
        print (node, end=' ')
        visited.add (node)
        for neighbor in graph[node]:
            dfs(visited, graph, neighbor)

print("BFS:", end=" ")
bfs(visited_bfs, graph, 'A')
print('\n')
print("DFS:", end=" ")
dfs(visited, graph, 'A')
